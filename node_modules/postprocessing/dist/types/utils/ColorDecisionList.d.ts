import { BaseEvent, EventDispatcher, Uniform, Vector3 } from "three";
import { CDLPreset } from "../enums/CDLPreset.js";
/**
 * ASC CDL events.
 *
 * @category Utils
 */
export interface CDLEventMap {
    toggle: BaseEvent;
}
/**
 * ASC CDL v1.2.
 *
 * The American Society of Cinematographers Color Decision List (ASC CDL) is a format for the exchange of basic primary
 * color grading information between equipment and software from different manufacturers. The format defines the math
 * for Slope, Offset, Power and Saturation.
 *
 * @see https://en.wikipedia.org/wiki/ASC_CDL
 * @see https://github.com/mrdoob/three.js/pull/28544
 * @category Utils
 */
export declare class ColorDecisionList extends EventDispatcher<CDLEventMap> {
    /**
     * A uniform that contains the combined CDL data for use in a shader.
     */
    readonly uniform: Uniform<{
        slope: Vector3;
        offset: Vector3;
        power: Vector3;
        saturation: number;
    }>;
    /**
     * @see {@link enabled}
     */
    private _enabled;
    /**
     * Constructs a new CDL configuration.
     */
    constructor();
    /**
     * Indicates whether this CDL is enabled.
     */
    get enabled(): boolean;
    set enabled(value: boolean);
    /**
     * The slope. Valid values: (0 ≤ Slope < +Infinity).
     */
    get slope(): Vector3;
    /**
     * The offset. Valid values: (-Infinity < Offset < +Infinity)
     */
    get offset(): Vector3;
    /**
     * The power. Valid values: (0 < Power < +Infinity)
     */
    get power(): Vector3;
    /**
     * The saturation. Valid values: (0 ≤ Saturation < +Infinity)
     */
    get saturation(): number;
    set saturation(value: number);
    /**
     * Applies the given CDL preset.
     *
     * @param preset - The preset.
     */
    applyPreset(preset: CDLPreset | null): void;
    /**
     * Sets this CDL to the linearly interpolated result of two given CDLs.
     *
     * @param cdl1 - The start CDL.
     * @param cdl2 - The end CDL.
     * @param alpha - The interpolation factor in the range [0, 1].
     */
    lerp(cdl1: ColorDecisionList, cdl2: ColorDecisionList, alpha: number): void;
}
